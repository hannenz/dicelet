/* libdocklet-dicelet.so.vapi generated by valac 0.40.24, do not modify. */

namespace Dicelet {
	[CCode (cheader_filename = "src/DiceletDocklet.h")]
	public class DiceSet {
		public GLib.List<Dicelet.Die> dice;
		public DiceSet (int[] faces);
		public string to_string ();
	}
	[CCode (cheader_filename = "src/DiceletDocklet.h")]
	public class DiceletDockItem : Plank.DockletItem {
		protected int current_set;
		protected GLib.List<Dicelet.Die> dice;
		protected GLib.List<Dicelet.DiceSet> dicesets;
		protected int sum;
		public DiceletDockItem ();
		protected override void draw_icon (Plank.Surface surface);
		public override Gee.ArrayList<Gtk.MenuItem> get_menu_items ();
		protected override Plank.AnimationType on_clicked (Plank.PopupButton button, Gdk.ModifierType mod, uint32 event_time);
		protected void roll ();
		public DiceletDockItem.with_dockitem_file (GLib.File file);
	}
	[CCode (cheader_filename = "src/DiceletDocklet.h")]
	public class DiceletDocklet : GLib.Object, Plank.Docklet {
		public DiceletDocklet ();
	}
	[CCode (cheader_filename = "src/DiceletDocklet.h")]
	public class DiceletPreferences : Plank.DockItemPreferences {
		public DiceletPreferences ();
		protected override void reset_properties ();
		public DiceletPreferences.with_file (GLib.File file);
	}
	[CCode (cheader_filename = "src/DiceletDocklet.h")]
	public class Die {
		public Die (int n_faces);
		public int roll ();
		public int last_roll { get; set; }
		public int n_faces { get; set; }
	}
	[CCode (cheader_filename = "src/DiceletDocklet.h")]
	protected static GLib.List<Dicelet.Die> dice;
	[CCode (cheader_filename = "src/DiceletDocklet.h")]
	public const string G_RESOURCE_PATH;
}
[CCode (cheader_filename = "src/DiceletDocklet.h")]
public static void docklet_init (Plank.DockletManager manager);
